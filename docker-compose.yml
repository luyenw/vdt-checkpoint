version: '3.7'

services:
  cache:
    image: redis:6.2-alpine
    restart: always
    hostname: redis
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - cache:/data

  redis-exporter:
    image: oliver006/redis_exporter:v1.12.0-alpine
    hostname: redis-exporter
    ports:
      - 9121:9121
    command:
      - '--redis.addr=redis://redis:6379'
      - '--redis.password=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81'
    depends_on:
      - cache
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    volumes:
      - zoo1:/var/lib/zookeeper/data
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    volumes:
      - kafka1:/var/lib/kafka/data
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://kafka1:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
      
  kafka-exporter:
    image: bitnami/kafka-exporter:1.7.0
    command:
      - "--kafka.server=kafka1:29092"
    ports:
      - 9308:9308
    depends_on:
      - kafka1
  
  prometheus:
    image: prom/prometheus:v2.49.1
    ports:
    - 9090:9090
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    volumes:
    - ./prometheus.yml:/etc/prometheus/prometheus.yml
  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    restart: always
    volumes:
      - grafana-data:/var/lib/grafana
  consumer:
    build:
      context: consumer-golang
      dockerfile: Dockerfile
    depends_on:
      - kafka1
      - cache
    environment:
      - KAFKA_BROKERS=kafka1:29092
      - KAFKA_CONSUMER_GROUP=worker19
      - KAFKA_IN_TOPIC=in
      - KAFKA_IN_TOPIC=out
      - REDIS_HOST=redis://redis:6379
      - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
volumes:
  grafana-data:
    driver: local
  cache:
    driver: local
  esdata:
    driver: local
  pgdata:
    driver: local
  kafka1:
    driver: local
  zoo1:
    driver: local
